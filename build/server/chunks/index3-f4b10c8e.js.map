{"version":3,"file":"index3-f4b10c8e.js","sources":["../../../.svelte-kit/adapter-node/chunks/index3.js"],"sourcesContent":["const usePostData = async (url, body, options = {}) => {\n  const defaultOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(url, { ...defaultOptions, ...options });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong\");\n  }\n  return data;\n};\nconst mediaDefaultFields = `\nid\ntype\ntitle {\n  userPreferred\n}\ncoverImage {\n  extraLarge\n  large\n  color\n}\nstartDate {\n  year\n  month\n  day\n}\nendDate {\n  year\n  month\n  day\n}\nbannerImage\nseason\nseasonYear\ndescription\ntype\nformat\nstatus(version: 2)\nepisodes\nduration\nchapters\nvolumes\nfavourites\ntrending\ngenres\nisAdult\naverageScore\npopularity\ntrailer {\n  id\n  site \n}\nnextAiringEpisode {\n  airingAt\n  episode\n}\n`;\nconst mediaDetailsDefaultFields = `\nid\nidMal\ntitle {\n  romaji\n  english\n  native\n  userPreferred\n}\ntype\nformat\nstatus\ndescription\nstartDate {\n  year\n  month\n  day\n}\nendDate {\n  year\n  month\n  day\n}\nseason\nseasonYear\nseasonInt\nepisodes\nduration\nchapters\nvolumes\ncountryOfOrigin\nupdatedAt\ncoverImage {\n  extraLarge\n  large\n  medium\n  color\n}\nrankings {\n  rank\n  type\n  context\n  allTime\n  season\n  format\n  year\n}\nbannerImage\ngenres\nsynonyms\naverageScore\npopularity\ntrending\nfavourites\ntags {\n  id\n  name\n  description\n  category\n  rank\n  isGeneralSpoiler\n  isMediaSpoiler\n  isAdult\n  userId\n}\nrelations {\n  edges {\n    relationType\n    node {\n      ${mediaDefaultFields}\n    }\n  }\n  pageInfo {\n    total\n    perPage\n    currentPage\n    lastPage\n    hasNextPage\n  }\n}\ncharacters {\n  edges {\n    role\n    node {\n      id\n      image {\n        large\n        medium\n      }\n      name {\n        first\n        middle\n        last\n        full\n        native\n        userPreferred\n      }\n    }\n  }\n  pageInfo {\n    total\n    perPage\n    currentPage\n    lastPage\n    hasNextPage\n  }\n}\nstaff{\n  edges {\n    role\n    node {\n      id\n      image {\n        large\n        medium\n      }\n      name {\n        first\n        middle\n        last\n        full\n        native\n        userPreferred\n      }\n    }\n  }\n  pageInfo {\n    total\n    perPage\n    currentPage\n    lastPage\n    hasNextPage\n  }\n}\nstudios {\n  nodes {\n    id\n    name\n  }\n  pageInfo {\n    total\n    perPage\n    currentPage\n    lastPage\n    hasNextPage\n  }\n}\nisAdult\nrecommendations {\n  nodes {\n    mediaRecommendation {\n      ${mediaDefaultFields}\n    }\n  }\n  pageInfo {\n    total\n    perPage\n    currentPage\n    lastPage\n    hasNextPage\n  }\n}\nnextAiringEpisode{\n  airingAt\n  episode\n  timeUntilAiring\n}\nstreamingEpisodes{\n  thumbnail\n  title\n  url\n}\nexternalLinks{\n  type\n  color\n  language\n  url\n  site\n  icon\n}\n`;\nconst mediaDetailsQuery = (fields = mediaDetailsDefaultFields) => `\nquery Media(\n  $id: Int\n  $idMal: Int\n  $startDate: FuzzyDateInt\n  $endDate: FuzzyDateInt\n  $season: MediaSeason\n  $seasonYear: Int\n  $type: MediaType\n  $format: MediaFormat\n  $status: MediaStatus\n  $episodes: Int\n  $duration: Int\n  $chapters: Int\n  $volumes: Int\n  $isAdult: Boolean\n  $genre: String\n  $tag: String\n  $minimumTagRank: Int\n  $tagCategory: String\n  $onList: Boolean\n  $licensedBy: String\n  $licensedById: Int\n  $averageScore: Int\n  $popularity: Int\n  $source: MediaSource\n  $countryOfOrigin: CountryCode\n  $isLicensed: Boolean\n  $search: String\n  $id_not: Int\n  $id_in: [Int]\n  $id_not_in: [Int]\n  $idMal_not: Int\n  $idMal_in: [Int]\n  $idMal_not_in: [Int]\n  $startDate_greater: FuzzyDateInt\n  $startDate_lesser: FuzzyDateInt\n  $startDate_like: String\n  $endDate_greater: FuzzyDateInt\n  $endDate_lesser: FuzzyDateInt\n  $endDate_like: String\n  $format_in: [MediaFormat]\n  $format_not: MediaFormat\n  $format_not_in: [MediaFormat]\n  $status_in: [MediaStatus]\n  $status_not: MediaStatus\n  $status_not_in: [MediaStatus]\n  $episodes_greater: Int\n  $episodes_lesser: Int\n  $duration_greater: Int\n  $duration_lesser: Int\n  $chapters_greater: Int\n  $chapters_lesser: Int\n  $volumes_greater: Int\n  $volumes_lesser: Int\n  $genre_in: [String]\n  $genre_not_in: [String]\n  $tag_in: [String]\n  $tag_not_in: [String]\n  $tagCategory_in: [String]\n  $tagCategory_not_in: [String]\n  $licensedBy_in: [String]\n  $licensedById_in: [Int]\n  $averageScore_not: Int\n  $averageScore_greater: Int\n  $averageScore_lesser: Int\n  $popularity_not: Int\n  $popularity_greater: Int\n  $popularity_lesser: Int\n  $source_in: [MediaSource]\n  $sort: [MediaSort]\n) {\n  Media(\n    id: $id\n    idMal: $idMal\n    startDate: $startDate\n    endDate: $endDate\n    season: $season\n    seasonYear: $seasonYear\n    type: $type\n    format: $format\n    status: $status\n    episodes: $episodes\n    duration: $duration\n    chapters: $chapters\n    volumes: $volumes\n    isAdult: $isAdult\n    genre: $genre\n    tag: $tag\n    minimumTagRank: $minimumTagRank\n    tagCategory: $tagCategory\n    onList: $onList\n    licensedBy: $licensedBy\n    licensedById: $licensedById\n    averageScore: $averageScore\n    popularity: $popularity\n    source: $source\n    countryOfOrigin: $countryOfOrigin\n    isLicensed: $isLicensed\n    search: $search\n    id_not: $id_not\n    id_in: $id_in\n    id_not_in: $id_not_in\n    idMal_not: $idMal_not\n    idMal_in: $idMal_in\n    idMal_not_in: $idMal_not_in\n    startDate_greater: $startDate_greater\n    startDate_lesser: $startDate_lesser\n    startDate_like: $startDate_like\n    endDate_greater: $endDate_greater\n    endDate_lesser: $endDate_lesser\n    endDate_like: $endDate_like\n    format_in: $format_in\n    format_not: $format_not\n    format_not_in: $format_not_in\n    status_in: $status_in\n    status_not: $status_not\n    status_not_in: $status_not_in\n    episodes_greater: $episodes_greater\n    episodes_lesser: $episodes_lesser\n    duration_greater: $duration_greater\n    duration_lesser: $duration_lesser\n    chapters_greater: $chapters_greater\n    chapters_lesser: $chapters_lesser\n    volumes_greater: $volumes_greater\n    volumes_lesser: $volumes_lesser\n    genre_in: $genre_in\n    genre_not_in: $genre_not_in\n    tag_in: $tag_in\n    tag_not_in: $tag_not_in\n    tagCategory_in: $tagCategory_in\n    tagCategory_not_in: $tagCategory_not_in\n    licensedBy_in: $licensedBy_in\n    licensedById_in: $licensedById_in\n    averageScore_not: $averageScore_not\n    averageScore_greater: $averageScore_greater\n    averageScore_lesser: $averageScore_lesser\n    popularity_not: $popularity_not\n    popularity_greater: $popularity_greater\n    popularity_lesser: $popularity_lesser\n    source_in: $source_in\n    sort: $sort      \n  ) {\n    ${fields}\n  }\n}\n\n`;\nconst charactersDefaultFields = `\nid\nname {\n  first\n  middle\n  last\n  full\n  native\n  alternative\n  alternativeSpoiler\n  userPreferred\n}\nimage {\n  large\n  medium\n}\ndescription\ngender\ndateOfBirth {\n  year\n  month\n  day\n}\nage\nbloodType\nupdatedAt\nfavourites\n`;\nconst charactersQuery = (fields = charactersDefaultFields) => `\nquery Character(\n  $page: Int = 1\n  $perPage: Int = 20\n  $id: Int\n  $isBirthday: Boolean\n  $search: String\n  $id_not: Int\n  $id_in: [Int]\n  $id_not_in: [Int]\n  $sort: [CharacterSort]\n) {\n  Page(page: $page, perPage: $perPage) {\n    pageInfo {\n      total\n      perPage\n      currentPage\n      lastPage\n      hasNextPage\n    }\n    characters(\n      id: $id\n      isBirthday: $isBirthday\n      search: $search\n      id_not: $id_not\n      id_in: $id_in\n      id_not_in: $id_not_in\n      sort: $sort\n    ) {\n      ${fields}\n    }\n  }\n}\n`;\nconst staffDefaultFields = `\nid\nname {\n  first\n  middle\n  last\n  full\n  native\n  alternative\n  userPreferred\n}\nlanguage\nlanguageV2\nimage {\n  large\n  medium\n}\ndescription\nprimaryOccupations\ngender\ndateOfBirth {\n  year\n  month\n  day\n}\ndateOfDeath {\n  year\n  month\n  day\n}\nage\nyearsActive\nhomeTown\nbloodType\nisFavourite\nupdatedAt\nfavourites\n`;\nconst staffQuery = (fields = staffDefaultFields) => `\nquery Staff(\n  $page: Int = 1\n  $perPage: Int = 20\n  $id: Int\n  $isBirthday: Boolean\n  $search: String\n  $id_not: Int\n  $id_in: [Int]\n  $id_not_in: [Int]\n  $sort: [StaffSort]\n) {\n  Page(page: $page, perPage: $perPage) {\n    pageInfo {\n      total\n      perPage\n      currentPage\n      lastPage\n      hasNextPage\n    }\n    staff(\n      id: $id\n      isBirthday: $isBirthday\n      search: $search\n      id_not: $id_not\n      id_in: $id_in\n      id_not_in: $id_not_in\n      sort: $sort\n    ) {\n      ${fields}\n    }\n  }\n}\n`;\nconst GRAPHQL_URL = \"https://graphql.anilist.co\";\nconst anilistFetcher = async (query, variables) => {\n  const data = await usePostData(GRAPHQL_URL, {\n    query,\n    variables\n  });\n  return data?.data;\n};\nconst getMediaDetails = async (args, fields) => {\n  const response = await anilistFetcher(\n    mediaDetailsQuery(fields),\n    args\n  );\n  const media = response?.Media;\n  return {\n    ...media\n  };\n};\nconst getCharacterDetails = async (args, fields) => {\n  const defaultFields = `\n    ${charactersDefaultFields}\n    media {\n      edges {\n        characterRole\n        node {\n          ${mediaDefaultFields}\n        }\n        voiceActorRoles {\n          roleNotes\n          voiceActor {\n            ${staffDefaultFields}\n          }\n        }\n      }\n    }\n  `;\n  const response = await anilistFetcher(\n    charactersQuery(fields || defaultFields),\n    { ...args, perPage: 1 }\n  );\n  return response?.Page.characters ? response?.Page.characters[0] : null;\n};\nconst getStaffDetails = async (args, fields) => {\n  const defaultFields = `\n    ${staffDefaultFields}\n    characterMedia {\n      pageInfo {\n        total\n        perPage\n        currentPage\n        lastPage\n        hasNextPage\n      }\n      edges {\n        characterRole\n        node {\n          id\n          type\n          coverImage {\n            color\n            extraLarge\n            large\n            medium\n          }\n          title {\n            userPreferred\n            english\n          }\n          format\n          startDate {\n            year\n          }\n        }\n        characters {\n          id\n          name {\n            userPreferred\n          }\n          image {\n            large\n            medium\n          }\n        }\n      }\n    }\n  `;\n  const response = await anilistFetcher(\n    staffQuery(fields || defaultFields),\n    { ...args, perPage: 1 }\n  );\n  return response?.Page.staff ? response?.Page.staff[0] : null;\n};\nexport {\n  getStaffDetails as a,\n  getMediaDetails as b,\n  getCharacterDetails as g\n};\n"],"names":[],"mappings":"AAAA,MAAM,WAAW,GAAG,OAAO,GAAG,EAAE,IAAI,EAAE,OAAO,GAAG,EAAE,KAAK;AACvD,EAAE,MAAM,cAAc,GAAG;AACzB,IAAI,MAAM,EAAE,MAAM;AAClB,IAAI,OAAO,EAAE;AACb,MAAM,cAAc,EAAE,kBAAkB;AACxC,KAAK;AACL,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAC9B,GAAG,CAAC;AACJ,EAAE,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE,EAAE,GAAG,cAAc,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;AACvE,EAAE,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AACrC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AACpB,IAAI,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,IAAI,sBAAsB,CAAC,CAAC;AAC5D,GAAG;AACH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AACF,MAAM,kBAAkB,GAAG,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,yBAAyB,GAAG,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,EAAE,kBAAkB,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,EAAE,kBAAkB,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,iBAAiB,GAAG,CAAC,MAAM,GAAG,yBAAyB,KAAK,CAAC;AACnb;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,uBAAuB,GAAG,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,eAAe,GAAG,CAAC,MAAM,GAAG,uBAAuB,KAAK,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,EAAE,MAAM,CAAC;AACf;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,kBAAkB,GAAG,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,UAAU,GAAG,CAAC,MAAM,GAAG,kBAAkB,KAAK,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,EAAE,MAAM,CAAC;AACf;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,WAAW,GAAG,4BAA4B,CAAC;AACjD,MAAM,cAAc,GAAG,OAAO,KAAK,EAAE,SAAS,KAAK;AACnD,EAAE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,WAAW,EAAE;AAC9C,IAAI,KAAK;AACT,IAAI,SAAS;AACb,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,IAAI,EAAE,IAAI,CAAC;AACpB,CAAC,CAAC;AACG,MAAC,eAAe,GAAG,OAAO,IAAI,EAAE,MAAM,KAAK;AAChD,EAAE,MAAM,QAAQ,GAAG,MAAM,cAAc;AACvC,IAAI,iBAAiB,CAAC,MAAM,CAAC;AAC7B,IAAI,IAAI;AACR,GAAG,CAAC;AACJ,EAAE,MAAM,KAAK,GAAG,QAAQ,EAAE,KAAK,CAAC;AAChC,EAAE,OAAO;AACT,IAAI,GAAG,KAAK;AACZ,GAAG,CAAC;AACJ,EAAE;AACG,MAAC,mBAAmB,GAAG,OAAO,IAAI,EAAE,MAAM,KAAK;AACpD,EAAE,MAAM,aAAa,GAAG,CAAC;AACzB,IAAI,EAAE,uBAAuB,CAAC;AAC9B;AACA;AACA;AACA;AACA,UAAU,EAAE,kBAAkB,CAAC;AAC/B;AACA;AACA;AACA;AACA,YAAY,EAAE,kBAAkB,CAAC;AACjC;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC;AACJ,EAAE,MAAM,QAAQ,GAAG,MAAM,cAAc;AACvC,IAAI,eAAe,CAAC,MAAM,IAAI,aAAa,CAAC;AAC5C,IAAI,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE;AAC3B,GAAG,CAAC;AACJ,EAAE,OAAO,QAAQ,EAAE,IAAI,CAAC,UAAU,GAAG,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACzE,EAAE;AACG,MAAC,eAAe,GAAG,OAAO,IAAI,EAAE,MAAM,KAAK;AAChD,EAAE,MAAM,aAAa,GAAG,CAAC;AACzB,IAAI,EAAE,kBAAkB,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC;AACJ,EAAE,MAAM,QAAQ,GAAG,MAAM,cAAc;AACvC,IAAI,UAAU,CAAC,MAAM,IAAI,aAAa,CAAC;AACvC,IAAI,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE;AAC3B,GAAG,CAAC;AACJ,EAAE,OAAO,QAAQ,EAAE,IAAI,CAAC,KAAK,GAAG,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC/D;;;;"}
{"version":3,"file":"aniList-723ca79a.js","sources":["../../../.svelte-kit/adapter-node/chunks/aniList.js"],"sourcesContent":["const aniListEndPoint = \"https://graphql.anilist.co\";\nconst aniListqueryMedia = `\nquery Media(\n  $page: Int = 1,\n  $perPage: Int = 20,\n  $id: Int\n  $idMal: Int\n  $startDate: FuzzyDateInt\n  $endDate: FuzzyDateInt\n  $season: MediaSeason\n  $seasonYear: Int\n  $type: MediaType\n  $format: MediaFormat\n  $status: MediaStatus\n  $episodes: Int\n  $duration: Int\n  $chapters: Int\n  $volumes: Int\n  $isAdult: Boolean = false,\n  $genre: String\n  $tag: String\n  $minimumTagRank: Int\n  $tagCategory: String\n  $onList: Boolean\n  $licensedBy: String\n  $licensedById: Int\n  $averageScore: Int\n  $popularity: Int\n  $source: MediaSource\n  $countryOfOrigin: CountryCode\n  $isLicensed: Boolean\n  $search: String\n  $id_not: Int\n  $id_in: [Int]\n  $id_not_in: [Int]\n  $idMal_not: Int\n  $idMal_in: [Int]\n  $idMal_not_in: [Int]\n  $startDate_greater: FuzzyDateInt\n  $startDate_lesser: FuzzyDateInt\n  $year: String\n  $endDate_greater: FuzzyDateInt\n  $endDate_lesser: FuzzyDateInt\n  $endDate_like: String\n  $format_in: [MediaFormat]\n  $format_not: MediaFormat\n  $format_not_in: [MediaFormat]\n  $status_in: [MediaStatus]\n  $status_not: MediaStatus\n  $status_not_in: [MediaStatus]\n  $episodes_greater: Int\n  $episodes_lesser: Int\n  $duration_greater: Int\n  $duration_lesser: Int\n  $chapters_greater: Int\n  $chapters_lesser: Int\n  $volumes_greater: Int\n  $volumes_lesser: Int\n  $genre_in: [String]\n  $genre_not_in: [String]\n  $tag_in: [String]\n  $tag_not_in: [String]\n  $tagCategory_in: [String]\n  $tagCategory_not_in: [String]\n  $licensedBy_in: [String]\n  $licensedById_in: [Int]\n  $averageScore_not: Int\n  $averageScore_greater: Int\n  $averageScore_lesser: Int\n  $popularity_not: Int\n  $popularity_greater: Int\n  $popularity_lesser: Int\n  $source_in: [MediaSource]\n  $sort: [MediaSort]\n) {\n  Page(page: $page, perPage: $perPage) {\n    pageInfo {\n      total\n      perPage\n      currentPage\n      lastPage\n      hasNextPage\n    }\n    media(\n      id: $id\n      idMal: $idMal\n      startDate: $startDate\n      endDate: $endDate\n      season: $season\n      seasonYear: $seasonYear\n      type: $type\n      format: $format\n      status: $status\n      episodes: $episodes\n      duration: $duration\n      chapters: $chapters\n      volumes: $volumes\n      isAdult: $isAdult\n      genre: $genre\n      tag: $tag\n      minimumTagRank: $minimumTagRank\n      tagCategory: $tagCategory\n      onList: $onList\n      licensedBy: $licensedBy\n      licensedById: $licensedById\n      averageScore: $averageScore\n      popularity: $popularity\n      source: $source\n      countryOfOrigin: $countryOfOrigin\n      isLicensed: $isLicensed\n      search: $search\n      id_not: $id_not\n      id_in: $id_in\n      id_not_in: $id_not_in\n      idMal_not: $idMal_not\n      idMal_in: $idMal_in\n      idMal_not_in: $idMal_not_in\n      startDate_greater: $startDate_greater\n      startDate_lesser: $startDate_lesser\n      startDate_like: $year\n      endDate_greater: $endDate_greater\n      endDate_lesser: $endDate_lesser\n      endDate_like: $endDate_like\n      format_in: $format_in\n      format_not: $format_not\n      format_not_in: $format_not_in\n      status_in: $status_in\n      status_not: $status_not\n      status_not_in: $status_not_in\n      episodes_greater: $episodes_greater\n      episodes_lesser: $episodes_lesser\n      duration_greater: $duration_greater\n      duration_lesser: $duration_lesser\n      chapters_greater: $chapters_greater\n      chapters_lesser: $chapters_lesser\n      volumes_greater: $volumes_greater\n      volumes_lesser: $volumes_lesser\n      genre_in: $genre_in\n      genre_not_in: $genre_not_in\n      tag_in: $tag_in\n      tag_not_in: $tag_not_in\n      tagCategory_in: $tagCategory_in\n      tagCategory_not_in: $tagCategory_not_in\n      licensedBy_in: $licensedBy_in\n      licensedById_in: $licensedById_in\n      averageScore_not: $averageScore_not\n      averageScore_greater: $averageScore_greater\n      averageScore_lesser: $averageScore_lesser\n      popularity_not: $popularity_not\n      popularity_greater: $popularity_greater\n      popularity_lesser: $popularity_lesser\n      source_in: $source_in\n      sort: $sort      \n    ) {\n      \nid\ntype\ntitle {\n  english\n  userPreferred\n}\ncoverImage {\n  extraLarge\n  large\n  color\n}\nstartDate {\n  year\n  month\n  day\n}\nendDate {\n  year\n  month\n  day\n}\nbannerImage\nseason\nseasonYear\ndescription\ntype\nformat\nstatus(version: 2)\nepisodes\nduration\nchapters\nvolumes\nfavourites\ntrending\ngenres\nisAdult\naverageScore\npopularity\ntrailer {\n  id\n  site \n}\nnextAiringEpisode {\n  airingAt\n  episode\n}\n\n    }\n  }\n}\n`;\nconst aniListQueryCharacter = `\nquery (\n  $id: Int\n  $sort: [MediaSort]\n  $page: Int = 1\n  $perPage: Int = 18\n  $search: String\n  $withMedia:Boolean = true\n) {\n    Character(id: $id, search: $search) {\n      id\n      name {\n        userPreferred\n        native\n        alternative\n        alternativeSpoiler\n      }\n      description\n      gender\n      age\n      image {\n        large\n        medium\n      }\n      dateOfBirth {\n        month\n        day\n      }\n      favourites\n      media(sort: $sort, page: $page, perPage: $perPage) @include(if: $withMedia) {\n        pageInfo {\n          total\n          perPage\n          currentPage\n          lastPage\n          hasNextPage\n        }\n        edges {\n          characterRole\n          voiceActorRoles {\n            roleNotes\n            voiceActor {\n              id\n              languageV2\n              name {\n                userPreferred\n              }\n              age\n              image {\n                medium\n                large\n              }\n            }\n          }\n          node {\n            id\n            type\n            title {\n              english\n              userPreferred\n            }\n            format\n            coverImage {\n              large\n              extraLarge\n              color\n            }\n            nextAiringEpisode {\n              airingAt\n              episode\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst aniListQueryBrowseCharacter = `query($page:Int = 1 $perPage:Int = 24 $id:Int $search:String $isBirthday:Boolean $sort:[CharacterSort]){Page(page:$page,perPage:$perPage){pageInfo{total perPage currentPage lastPage hasNextPage}characters(id:$id search:$search isBirthday:$isBirthday sort:$sort){id name{userPreferred}image{large}}}}`;\nconst aniListQueryBrowseStaff = `query($page:Int = 1 $perPage:Int = 24 $id:Int $search:String $isBirthday:Boolean $sort:[StaffSort]){Page(page:$page,perPage:$perPage){pageInfo{total perPage currentPage lastPage hasNextPage}staff(id:$id search:$search isBirthday:$isBirthday sort:$sort){id name{userPreferred}image{large}}}}`;\nconst aniListQueryCollection = `\n  query { GenreCollection\n    MediaTagCollection {\n      name\n    }\n  }\n`;\nconst aniListQueryStaff = `\nquery($page:Int = 1 $perPage:Int = 18 $id:Int $sort:[MediaSort] = [START_DATE_DESC]){\n  Staff(id: $id) {\n    id\n    name {\n      native\n      userPreferred\n      alternative\n    }\n    image {\n      large\n      medium\n    }\n    favourites\n    description\n    age\n    gender\n    bloodType\n    yearsActive\n    dateOfDeath{\n      year\n      month\n      day\n    }\n    homeTown\n    dateOfBirth {\n      year\n      month\n      day\n    }\n    characterMedia(page: $page, perPage: $perPage, sort: $sort) {\n      pageInfo {\n        total\n        perPage\n        currentPage\n        lastPage\n        hasNextPage\n      }\n      edges {\n        characterRole\n        characters {\n          id\n          name {\n            userPreferred\n          }\n          image{\n            medium\n            large\n          }\n        }\n        node {\n          id\n          type\n          startDate {\n            year\n          }\n          format\n          coverImage {\n            color\n            extraLarge\n            large\n            medium\n          }\n          title {\n            english\n            userPreferred\n          }\n          nextAiringEpisode {\n            airingAt\n            episode\n          }\n        }\n      }\n    }\n  }\n}\n`;\nconst aniListQueryAiringSchedule = `\nquery AiringSchedule($page: Int = 1, $perPage: Int = 20, $id: Int, $mediaId: Int, $episode: Int, $airingAt: Int, $notYetAired: Boolean, $id_not: Int, $id_in: [Int], $id_not_in: [Int], $mediaId_not: Int, $mediaId_in: [Int], $mediaId_not_in: [Int], $episode_not: Int, $episode_in: [Int], $episode_not_in: [Int], $episode_greater: Int, $episode_lesser: Int, $airingAt_greater: Int, $airingAt_lesser: Int, $sort: [AiringSort]) {\n  Page(page: $page, perPage: $perPage) {\n    pageInfo {\n      total\n      perPage\n      currentPage\n      lastPage\n      hasNextPage\n    }\n    airingSchedules(\n      id: $id, mediaId: $mediaId, episode: $episode, airingAt: $airingAt, notYetAired: $notYetAired, id_not: $id_not, id_in: $id_in, id_not_in: $id_not_in, mediaId_not: $mediaId_not, mediaId_in: $mediaId_in, mediaId_not_in: $mediaId_not_in, episode_not: $episode_not, episode_in: $episode_in, episode_not_in: $episode_not_in, episode_greater: $episode_greater, episode_lesser: $episode_lesser, airingAt_greater: $airingAt_greater, airingAt_lesser: $airingAt_lesser, sort: $sort\n    ) {\n      \nairingAt\nepisode\nmediaId\nmedia {\n  bannerImage\n  type\n  id\n  title {\n    english\n    userPreferred\n  }\n  coverImage {\n    extraLarge\n    large\n    color\n  }\n  genres\n  favourites\n  averageScore\n  isAdult\n  nextAiringEpisode {\n    airingAt\n    episode\n  }\n}\n\n    }\n  }\n}\n`;\nconst aniListQueryStudio = `\nquery($id:Int,$page:Int=1,$perPage:Int=18,$sort:[MediaSort]){Studio(id:$id){id name isAnimationStudio favourites isFavourite media(page:$page,perPage:$perPage,sort:$sort){pageInfo{total perPage currentPage lastPage hasNextPage}edges{isMainStudio node{id title{english userPreferred}coverImage{extraLarge large color}startDate{year month day}endDate{year month day}bannerImage season description type format status(version:2)episodes duration chapters volumes genres isAdult averageScore popularity mediaListEntry{id status}nextAiringEpisode{airingAt timeUntilAiring episode}}}}}}\n`;\nconst aniListDescriptionRewrite = (description) => {\n  if (!description)\n    return \"\";\n  let convertedText = description;\n  convertedText = convertedText.replace(\n    /__(.*?):__ (.*?)\\n|__(.*?):__ (.*?)!~/g,\n    '<p><span class=\"mr-1\">$1:</span>$2</p>'\n  );\n  convertedText = convertedText.replace(\n    /\\*\\*(.*?):\\*\\* (.*?)\\n|\\*\\*(.*?):\\*\\* (.*?)!~/g,\n    '<p><span class=\"mr-1\">$1:</span>$2</p>'\n  );\n  convertedText = convertedText.replace(/\\[(.*?)\\]\\((.*?)\\)/g, \"$1\");\n  convertedText = convertedText.replace(/~!|!~/g, \"\");\n  convertedText = convertedText.replace(/\\n/g, \"<br>\");\n  return convertedText;\n};\nconst formatTimestamp = (timestamp) => {\n  const units = [\n    { label: \"d\", seconds: 86400 },\n    { label: \"h\", seconds: 3600 },\n    { label: \"m\", seconds: 60 }\n  ];\n  let seconds = Math.floor((timestamp * 1e3 - Date.now()) / 1e3);\n  const parts = [];\n  for (const unit of units) {\n    const value = Math.floor(seconds / unit.seconds);\n    if (value > 0) {\n      parts.push(`${value}${unit.label}`);\n      seconds %= unit.seconds;\n    }\n  }\n  return parts.join(\" \");\n};\nexport {\n  aniListQueryAiringSchedule as a,\n  aniListEndPoint as b,\n  aniListqueryMedia as c,\n  aniListQueryCollection as d,\n  aniListQueryBrowseCharacter as e,\n  formatTimestamp as f,\n  aniListQueryBrowseStaff as g,\n  aniListDescriptionRewrite as h,\n  aniListQueryCharacter as i,\n  aniListQueryStaff as j,\n  aniListQueryStudio as k\n};\n"],"names":[],"mappings":"AAAK,MAAC,eAAe,GAAG,6BAA6B;AAChD,MAAC,iBAAiqBAAqB,GAAG,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACG,MAAC,2BAA2B,GAAG,CAAC,2SAA2S,EAAE;AAC7U,MAAC,uBAAuB,GAAG,CAAC,kSAAkS,EAAE;AAChU,MAAC,sBAAsB,GAAG,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA,EAAE;AACG,MAAC,iBAAiB,GAAG,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACG,MAAC,0BAA0B,GAAG,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACG,MAAC,kBAAkB,GAAG,CAAC;AAC5B;AACA,EAAE;AACG,MAAC,yBAAyB,GAAG,CAAC,WAAW,KAAK;AACnD,EAAE,IAAI,CAAC,WAAW;AAClB,IAAI,OAAO,EAAE,CAAC;AACd,EAAE,IAAI,aAAa,GAAG,WAAW,CAAC;AAClC,EAAE,aAAa,GAAG,aAAa,CAAC,OAAO;AACvC,IAAI,wCAAwC;AAC5C,IAAI,wCAAwC;AAC5C,GAAG,CAAC;AACJ,EAAE,aAAa,GAAG,aAAa,CAAC,OAAO;AACvC,IAAI,gDAAgD;AACpD,IAAI,wCAAwC;AAC5C,GAAG,CAAC;AACJ,EAAE,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;AACrE,EAAE,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AACtD,EAAE,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACvD,EAAE,OAAO,aAAa,CAAC;AACvB,EAAE;AACG,MAAC,eAAe,GAAG,CAAC,SAAS,KAAK;AACvC,EAAE,MAAM,KAAK,GAAG;AAChB,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE;AAClC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;AACjC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE;AAC/B,GAAG,CAAC;AACJ,EAAE,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC;AACjE,EAAE,MAAM,KAAK,GAAG,EAAE,CAAC;AACnB,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC5B,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;AACrD,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;AACnB,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1C,MAAM,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC;AAC9B,KAAK;AACL,GAAG;AACH,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB;;;;"}